{"ast":null,"code":"document.addEventListener('turbolinks:load', function () {\n  var control = document.querySelector('.sort-by-title');\n\n  if (control) {\n    control.addEventListener('click', sortRowsByTitle);\n  }\n});\n\nfunction sortRowsByTitle() {\n  var table = document.querySelector('table');\n  var rows = table.querySelectorAll('tr');\n  var sortedRows = []; // Select all table rows except the first one which is the header\n\n  for (var i = 1; i < rows.length; i++) {\n    sortedRows.push(rows[i]);\n  }\n\n  var arrowUp = this.querySelector('.octicon-arrow-up');\n  console.log(arrowUp);\n  sortedRows.sort(compareRowsAsc); // if () {\n  //   sortedRows.sort(compareRowsAsc)\n  // } else {\n  //   sortedRows.sort(compareRowsDesc)\n  // }\n\n  var sortedTable = document.createElement('table');\n  sortedTable.classList.add('table');\n  sortedTable.appendChild(rows[0]);\n\n  for (var i = 0; i < sortedRows.length; i++) {\n    sortedTable.appendChild(sortedRows[i]);\n  }\n\n  table.parentNode.replaceChild(sortedTable, table);\n}\n\nfunction compareRowsAsc(row1, row2) {\n  var testTitle1 = row1.querySelector('td').textContent;\n  var testTitle2 = row2.querySelector('td').textContent;\n\n  if (testTitle1 < testTitle2) {\n    return -1;\n  }\n\n  if (testTitle1 > testTitle2) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction compareRowsDesc(row1, row2) {\n  var testTitle1 = row1.querySelector('td').textContent;\n  var testTitle2 = row2.querySelector('td').textContent;\n\n  if (testTitle1 < testTitle2) {\n    return 1;\n  }\n\n  if (testTitle1 > testTitle2) {\n    return -1;\n  }\n\n  return 0;\n}","map":{"version":3,"sources":["/Users/pr/Downloads/Rails/app/javascript/utilities/sorting.js"],"names":["document","addEventListener","control","querySelector","sortRowsByTitle","table","rows","querySelectorAll","sortedRows","i","length","push","arrowUp","console","log","sort","compareRowsAsc","sortedTable","createElement","classList","add","appendChild","parentNode","replaceChild","row1","row2","testTitle1","textContent","testTitle2","compareRowsDesc"],"mappings":"AAAAA,QAAQ,CAACC,gBAAT,CAA0B,iBAA1B,EAA6C,YAAW;AAEtD,MAAIC,OAAO,GAAGF,QAAQ,CAACG,aAAT,CAAuB,gBAAvB,CAAd;;AAEA,MAAID,OAAJ,EAAa;AAAEA,IAAAA,OAAO,CAACD,gBAAR,CAAyB,OAAzB,EAAkCG,eAAlC;AAAoD;AACpE,CALD;;AAOA,SAASA,eAAT,GAA2B;AACzB,MAAIC,KAAK,GAAGL,QAAQ,CAACG,aAAT,CAAuB,OAAvB,CAAZ;AAEA,MAAIG,IAAI,GAAGD,KAAK,CAACE,gBAAN,CAAuB,IAAvB,CAAX;AACA,MAAIC,UAAU,GAAG,EAAjB,CAJyB,CAMzB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAACI,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACtCD,IAAAA,UAAU,CAACG,IAAX,CAAgBL,IAAI,CAACG,CAAD,CAApB;AACC;;AAED,MAAIG,OAAO,GAAG,KAAKT,aAAL,CAAmB,mBAAnB,CAAd;AAEAU,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AAEAJ,EAAAA,UAAU,CAACO,IAAX,CAAgBC,cAAhB,EAfyB,CAiBzB;AACA;AACA;AACA;AACA;;AAEA,MAAIC,WAAW,GAAGjB,QAAQ,CAACkB,aAAT,CAAuB,OAAvB,CAAlB;AAEAD,EAAAA,WAAW,CAACE,SAAZ,CAAsBC,GAAtB,CAA0B,OAA1B;AACAH,EAAAA,WAAW,CAACI,WAAZ,CAAwBf,IAAI,CAAC,CAAD,CAA5B;;AAEA,OAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,UAAU,CAACE,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1CQ,IAAAA,WAAW,CAACI,WAAZ,CAAwBb,UAAU,CAACC,CAAD,CAAlC;AACD;;AAEDJ,EAAAA,KAAK,CAACiB,UAAN,CAAiBC,YAAjB,CAA8BN,WAA9B,EAA2CZ,KAA3C;AACD;;AAED,SAASW,cAAT,CAAwBQ,IAAxB,EAA8BC,IAA9B,EAAoC;AAClC,MAAIC,UAAU,GAAGF,IAAI,CAACrB,aAAL,CAAmB,IAAnB,EAAyBwB,WAA1C;AACA,MAAIC,UAAU,GAAGH,IAAI,CAACtB,aAAL,CAAmB,IAAnB,EAAyBwB,WAA1C;;AAEA,MAAID,UAAU,GAAGE,UAAjB,EAA6B;AAAE,WAAO,CAAC,CAAR;AAAW;;AAC1C,MAAIF,UAAU,GAAGE,UAAjB,EAA6B;AAAE,WAAO,CAAP;AAAU;;AACzC,SAAO,CAAP;AACD;;AAED,SAASC,eAAT,CAAyBL,IAAzB,EAA+BC,IAA/B,EAAqC;AACnC,MAAIC,UAAU,GAAGF,IAAI,CAACrB,aAAL,CAAmB,IAAnB,EAAyBwB,WAA1C;AACA,MAAIC,UAAU,GAAGH,IAAI,CAACtB,aAAL,CAAmB,IAAnB,EAAyBwB,WAA1C;;AAEA,MAAID,UAAU,GAAGE,UAAjB,EAA6B;AAAE,WAAO,CAAP;AAAU;;AACzC,MAAIF,UAAU,GAAGE,UAAjB,EAA6B;AAAE,WAAO,CAAC,CAAR;AAAW;;AAC1C,SAAO,CAAP;AACD","sourcesContent":["document.addEventListener('turbolinks:load', function() {\n\n  var control = document.querySelector('.sort-by-title')\n\n  if (control) { control.addEventListener('click', sortRowsByTitle) }\n})\n\nfunction sortRowsByTitle() {\n  var table = document.querySelector('table')\n\n  var rows = table.querySelectorAll('tr')\n  var sortedRows = []\n\n  // Select all table rows except the first one which is the header\n  for (var i = 1; i < rows.length; i++) {\n  sortedRows.push(rows[i])\n  }\n\n  var arrowUp = this.querySelector('.octicon-arrow-up')\n\n  console.log(arrowUp)\n\n  sortedRows.sort(compareRowsAsc)\n\n  // if () {\n  //   sortedRows.sort(compareRowsAsc)\n  // } else {\n  //   sortedRows.sort(compareRowsDesc)\n  // }\n\n  var sortedTable = document.createElement('table')\n\n  sortedTable.classList.add('table')\n  sortedTable.appendChild(rows[0])\n\n  for (var i = 0; i < sortedRows.length; i++) {\n    sortedTable.appendChild(sortedRows[i])\n  }\n\n  table.parentNode.replaceChild(sortedTable, table)\n}\n\nfunction compareRowsAsc(row1, row2) {\n  var testTitle1 = row1.querySelector('td').textContent\n  var testTitle2 = row2.querySelector('td').textContent\n\n  if (testTitle1 < testTitle2) { return -1 }\n  if (testTitle1 > testTitle2) { return 1 }\n  return 0\n}\n\nfunction compareRowsDesc(row1, row2) {\n  var testTitle1 = row1.querySelector('td').textContent\n  var testTitle2 = row2.querySelector('td').textContent\n\n  if (testTitle1 < testTitle2) { return 1 }\n  if (testTitle1 > testTitle2) { return -1 }\n  return 0\n}"]},"metadata":{},"sourceType":"module"}